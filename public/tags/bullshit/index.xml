<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Bullshit on Sandors Systems Scribbles</title>
    <link>https://theargo.io/tags/bullshit/</link>
    <description>Recent content in Bullshit on Sandors Systems Scribbles</description>
    <generator>Hugo -- gohugo.io</generator>
    <copyright>&amp;copy; 2017. All rights reserved.</copyright>
    <lastBuildDate>Wed, 03 Sep 2014 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://theargo.io/tags/bullshit/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Run Ansible through pmksh</title>
      <link>https://theargo.io/post/run_ansible_through_pmksh/</link>
      <pubDate>Wed, 03 Sep 2014 00:00:00 +0000</pubDate>
      
      <guid>https://theargo.io/post/run_ansible_through_pmksh/</guid>
      <description>The problem Old corporations use shitty old software to do things that modern Linux is really good at doing itself. Using pmksh instead of a well laid out sudoers setup is what the problem is.
The goal Configure Ansible playbooks to execute through the pmksh shell on the targeted servers.
Shells &amp;amp; Ansible Currently Ansible &amp;amp; Python work together to take the output from bash and report back with formatting.</description>
    </item>
    
    <item>
      <title>Using Ansible to Align Passwords on Servers</title>
      <link>https://theargo.io/post/using_ansible_to_align_passwords_on_servers/</link>
      <pubDate>Thu, 17 Jul 2014 00:00:00 +0000</pubDate>
      
      <guid>https://theargo.io/post/using_ansible_to_align_passwords_on_servers/</guid>
      <description>The Problem: A group of servers get their passwords updated every 3 months with a new shared password. The servers passwords are then inconsistently updated leaving a group of servers with one of several possible user passwords.
The Goal: Use Ansible to attempt to login to each server using each of the possible passwords to find the correct one and log it. The final step of the playbook will have Ansible logging into each server using the found to be correct password and updating each server to a new shared password.</description>
    </item>
    
    <item>
      <title>Add WebProxy Cert to Fedora</title>
      <link>https://theargo.io/post/add_webproxy_cert_to_fedora/</link>
      <pubDate>Fri, 29 Nov 2013 00:00:00 +0000</pubDate>
      
      <guid>https://theargo.io/post/add_webproxy_cert_to_fedora/</guid>
      <description>The Goal  Make Fedora work behind a restrictive idiotic corporate web proxy Install a corporate cert to make that happen  Get the cert Install the cert spudBud@pineApplez&amp;gt; openssl x509 -text -in /path/to/proxycert.crt &amp;gt;&amp;gt; /etc/pki/tls/certs/ca-bundle.crt  The result Your corporate overlord has now man in the middled your personal gmail, have fun.</description>
    </item>
    
  </channel>
</rss>