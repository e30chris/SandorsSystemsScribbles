<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Security on Sandors Systems Scribbles</title>
    <link>https://theargo.io/tags/security/</link>
    <description>Recent content in Security on Sandors Systems Scribbles</description>
    <generator>Hugo -- gohugo.io</generator>
    <copyright>&amp;copy; 2017. All rights reserved.</copyright>
    <lastBuildDate>Thu, 17 Jul 2014 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://theargo.io/tags/security/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Using Ansible to Align Passwords on Servers</title>
      <link>https://theargo.io/post/using_ansible_to_align_passwords_on_servers/</link>
      <pubDate>Thu, 17 Jul 2014 00:00:00 +0000</pubDate>
      
      <guid>https://theargo.io/post/using_ansible_to_align_passwords_on_servers/</guid>
      <description>The Problem: A group of servers get their passwords updated every 3 months with a new shared password. The servers passwords are then inconsistently updated leaving a group of servers with one of several possible user passwords.
The Goal: Use Ansible to attempt to login to each server using each of the possible passwords to find the correct one and log it. The final step of the playbook will have Ansible logging into each server using the found to be correct password and updating each server to a new shared password.</description>
    </item>
    
    <item>
      <title>VPN Setup - MacBook to OpenVPN Server using Tunnelblick</title>
      <link>https://theargo.io/post/vpn_setup_macbook_to_openvpn_server_using_tunnelblick/</link>
      <pubDate>Tue, 10 Dec 2013 00:00:00 +0000</pubDate>
      
      <guid>https://theargo.io/post/vpn_setup_macbook_to_openvpn_server_using_tunnelblick/</guid>
      <description>The Goal  Get MacBook to connect to a OpenVPN Server Install Tunnelblick to make that happen  Setup the OpenVPN Server  Follow this - sandorsscribbl.es/vpn-setup-openvpn-server-deploy-on-aws  Install Tunnelblick Tunnelblick Google Code
Download OpenVPN Client Config file  Goto OpenVPN web client Login with new user Choose to download cert  Modify Client Config File for Tunnelblick  Create a folder for the new config / VPN connection The $vpnname.</description>
    </item>
    
    <item>
      <title>VPN Setup - OpenVPN Server Deploy on AWS</title>
      <link>https://theargo.io/post/vpn_setup_openvpn_server_deploy_on_aws/</link>
      <pubDate>Tue, 10 Dec 2013 00:00:00 +0000</pubDate>
      
      <guid>https://theargo.io/post/vpn_setup_openvpn_server_deploy_on_aws/</guid>
      <description>The Goal  Deploy an OpenVPN Server on AWS  Launch the OpenVPN Access Server AMI  Set AMI to VPC network Auto Assign Public Static IP  AMI ids    AMI Location ami id     US East (Virginia) ami-ff6b3096   US West (Oregon) ami-c8039bf8   US West (N California) ami-6c0b3d29   EU West (Ireland) ami-89d83afe   Asia Pacific (Singapore) ami-3c9bce6e   Asia Pacific (Tokyo) ami-172d4916   Asia Pacific (Sydney) ami-db73efe1   South America (Sao Paulo) ami-6d4ee870    Set user-data    Key Value     public_hostname hostname that clients should use to contact the server   admin_user (default=openvpn) Access Server administrative account name   license Access Server license key without a license key only 2 connections allowed   reroute_gw default=0 if 1, clients will route internet traffic through the VPN   reroute_dns default=0 if 1, clients will route DNS queries through the VPN    Set New Security Group    Protocol Type Port Source Role     SSH TCP 22 Anywhere 0.</description>
    </item>
    
  </channel>
</rss>